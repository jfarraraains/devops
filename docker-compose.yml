version: '3.7'
services:
  # agent:
  #   image: portainer/agent:1.5.1
  #   environment:
  #     AGENT_PORT: 9001
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker/volumes:/var/lib/docker/volumes
  #   networks:
  #     - agent_network
  jenkins:
    image: jenkinsci/blueocean
    container_name: jenkins
    environment:
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: 1
    networks:
      - jenkins
    ports:
      - "9080:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro

  jenkins-docker:
    image: docker:dind
    environment:
      DOCKER_TLS_CERTDIR: "/certs"
    networks:
      jenkins:
        aliases:
          - docker
    privileged: true
    ports:
      - 2376:2376
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client

  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'ted'
      MYSQL_PASSWORD: 'fredfred'
      MYSQL_ROOT_PASSWORD: 'fredfred'
    ports:
      - '9306:3306'
    volumes:
      - mysql-data:/var/lib/mysql

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-CU8-ubuntu-18.04
    restart: always
    ports:
      - '1433:1433'
    environment:
      SA_PASSWORD: 'P)C4devops'
      ACCEPT_EULA: 'Y'
    volumes:
      - mssql-data:/var/opt/mssql

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    # command: -H tcp://tasks.agent:9001 --tlsskipverify
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
      - "8000:8000"
    # networks:
    #   - agent_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data

  registry:
    image: registry:2
    ports:
      - 5000:5000
    volumes:
      - registry-data:/var/lib/registry

  nginx: 
    image: nginx:latest
    container_name: production_nginx
    environment:
      - ENV=development
      - APPLICATION_URL=http://
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/error.log:/etc/nginx/error_log.log
      - ./nginx/cache/:/etc/nginx/cache
      # - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 80:80
      - 443:443

  your_app_1:
    image: docker/getting-started
    container_name: your_app_1
    expose:
      - "80"

  your_app_2:
    image: docker/getting-started
    container_name: your_app_2
    expose:
      - "80"

networks:
  jenkins:
#   agent_network:
    # driver: overlay
    # attachable: true
  # devops_network:
  #   driver: overlay
  #   attachable: true
  # web:
  #   driver: overlay
  #   external: true
secrets:
  stest:
    file: /run/secrets/stest.txt
volumes:
  registry-data:
  jenkins-data:
  jenkins-docker-certs:
  mysql-data:
  mssql-data:
  portainer-data:
# docker-compose up